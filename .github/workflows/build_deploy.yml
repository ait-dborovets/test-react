name: React_S3_Cloudfront

env:
  BUCKET_NAME  : "test-react-ait"               # Provide relevant S3 Bucket name
  CLOUDFRONT_ID: "EAK071V1Y83IX"               # Provide CDN name
  AUTH         : "secrets"   # AWS auth method - 'secrets' for Github secrets, 'oidc' - for OpenID Connect

on:
  push:
    branches: [ "master" ]        # master is default branch to trigger Action upon push
  workflow_dispatch:

jobs:

  Build_App:
    runs-on: ubuntu-latest
    env : 
      CI: false
    
    steps:
      - name: Git clone
        uses: actions/checkout@v1

      - name: Build
        run: |
          sudo npm install npm -g
          npm install
          npm run build
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: react_app
          path: build/

  S3_Bucket_push:
    runs-on: ubuntu-latest
    needs  : [Build_App]
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: 'eu-central-1'  # Default AWS Region is eu-central-1
    
    steps:
      - name: Git clone
        uses: actions/checkout@v1

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: react_app
          path: build/

      # Configure AWS creds if Github secrets defined
      - name: Configure AWS creds with Github secrets
        if  : ${{ env.AUTH == 'secrets' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region           : ${{ env.AWS_REGION }}

      # Configures AWS creds with OpenID Connect if no secrets defined
      - name: Configure AWS creds with OpenID Connect
        if  : ${{ env.AUTH == 'oidc' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume   : arn:aws:iam::123456789:role/my-github-actions   # First, create and configure role (e.g. my-github-actions), provide proper Account ID
          role-session-name: githubactions
          aws-region       : ${{ env.AWS_REGION }}

      - name: Copy new files to S3 Bucket
        run : |
          echo "Copying new files to ${{ env.BUCKET_NAME }} ..."
          aws s3 sync ./build s3://${{ env.BUCKET_NAME }}/ --delete
          if [ $? -eq 0 ]; then
            echo "Files to ${{ env.BUCKET_NAME }} were copied successfully"
          else
            echo "An error occur while copying files to ${{ env.BUCKET_NAME }}"
            exit 1
          fi

  CF_INVALIDATION:
    runs-on: ubuntu-latest
    needs: [S3_Bucket_push]
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: 'eu-central-1' # Default AWS Region is eu-central-1

    steps:
      # Configure AWS creds if Github secrets defined
      - name: Configure AWS creds with Github secrets
        if  : ${{ env.AUTH == 'secrets' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region           : ${{ env.AWS_REGION }}

      # Configures AWS creds with OpenID Connect if no secrets defined
      - name: Configure AWS creds with OpenID Connect
        if  : ${{ env.AUTH == 'oidc' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume   : arn:aws:iam::123456789:role/my-github-actions   # First, create and configure role (e.g. my-github-actions), provide proper Account ID
          role-session-name: githubactions
          aws-region       : ${{ env.AWS_REGION }}

      - name: Refresh Cloudfront
        run : |
          echo "Invalidating CloudFront ${{ env.CLOUDFRONT_ID }}..."
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_ID }} --paths "/*"
          if [ $? -eq 0 ]; then
            echo "Cloudfront ${{ env. CLOUDFRONT_ID}} was successfully invalidated"
          else
            echo "An error occur while invalidating Cloudfront"
            exit 1
          fi